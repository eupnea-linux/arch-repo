name: Updating utils
on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "10 0 * * *" # run at the start of every day after script repos update
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true


env:
  public_key: ${{ secrets.PUBLIC }}
  private_key: ${{ secrets.PRIVATE }}

jobs:
  check-sha:
    runs-on: ubuntu-22.04
    outputs:
      match_results: ${{ steps.check-shas.outputs.match_results }}
      postinstall_remote_sha: ${{ steps.check-shas.outputs.postinstall_remote_sha }}
      audio_remote_sha: ${{ steps.check-shas.outputs.audio_remote_sha }}
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download remote commit shas
        id: check-shas
        run: |
          # Download remote shas
          postinstall_latest_sha=$(curl -s https://api.github.com/repos/eupnea-linux/postinstall-scripts/commits/main | jq -r '.sha')
          audio_latest_sha=$(curl -s https://api.github.com/repos/eupnea-linux/audio-scripts/commits/main | jq -r '.sha')
          
          # Check remote shas against cached ones
          postinstall_match_results=$([[ "$(cat utils_sha-cache.txt | head -1)" == "$postinstall_latest_sha" ]] && echo "true" || echo "false")
          audio_match_results=$([[ "$(cat utils_sha-cache.txt | tail -1)" == "$audio_latest_sha" ]] && echo "true" || echo "false")
          
          # Compare results and determine if there was an update in any of the repos
          if [[ "$postinstall_match_results" == "true" && "$audio_match_results" == "true" ]]; then
            echo "match_results=true" >> $GITHUB_OUTPUT
          else
            echo "match_results=false" >> $GITHUB_OUTPUT
          fi
          
          # Add shas to output
          echo "postinstall_remote_sha=$postinstall_latest_sha" >> $GITHUB_OUTPUT
          echo "audio_remote_sha=$audio_latest_sha" >> $GITHUB_OUTPUT

  deploy-repo:
    runs-on: ubuntu-22.04
    needs: check-sha # needs for the vars from the previous job
    # Only run script when remote sha has changed, aka the results DON'T match
    if: needs.check-sha.outputs.match_results == 'false'
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Update local commits sha file
        run: |
          echo "${{ needs.check-sha.outputs.postinstall_remote_sha }}"$'\n'"${{ needs.check-sha.outputs.audio_remote_sha }}" > utils_sha-cache.txt

      - name: Install pacman
        run: |
          # Add ubuntu 22.10 repo to sources
          echo "deb http://archive.ubuntu.com/ubuntu kinetic main universe" | sudo tee -a /etc/apt/sources.list
          # Update apt sources
          sudo apt-get update
          # Install pacman-package-manager from ubuntu 22.10 repo
          sudo apt-get -y install pacman-package-manager libarchive-tools

      - name: Bump version in PKGBUILD file
        run: |
          CURRENT_VERSION=$(sed -n '3p' UTILS-PKGBUILD | sed 's/.*://' | xargs) # get current version from control file
          NEXTVERSION=$(echo ${CURRENT_VERSION} | awk -F. -v OFS=. '{$NF += 1 ; print}') # bump version
          sed -i "3s/.*/${NEXTVERSION}/" UTILS-PKGBUILD # update version in control file

      - name: Packing eupnea-utils package
        run: makepkg -p UTILS-PKGBUILD

      - name: Downloading old repo
        run: |
          # Download old repo.
          # Exit in case the branch doesn't exist yet
          git clone --branch=gh-pages https://github.com/eupnea-linux/arch-repo /tmp/arch-repo || exit 0
          
          # Copy old repo to current directory
          cp -r /tmp/arch-repo/eupnea .
          
          # Delete old util packages
          rm -rf eupnea/os/any/eupnea-utils*.pkg.tar.gz

          # Delete all signatures
          rm -rf eupnea/os/any/*.sig

      - name: Setting up arch repo
        run: bash create-repo.sh

      - name: Updating files in main branch
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: Update files in main branch
          file_pattern: 'UTILS-PKGBUILD utils_sha-cache.txt'

      - name: Deploying repo
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: Deploy arch-repo
          branch: gh-pages
          create_branch: true
          # Only include needed files
          file_pattern: 'eupnea/* public_key.gpg'
          push_options: '--force'
name: Deploying arch repo
on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "10 0 * * *" # run at the start of every day after script repos update
  workflow_dispatch:

env:
  public_key: ${{ secrets.PUBLIC }}
  private_key: ${{ secrets.PRIVATE }}

jobs:
  check-sha:
    runs-on: ubuntu-22.04
    outputs:
      match_results: ${{ steps.check-shas.outputs.match_results }}
      combined_remote_shas: ${{ steps.check-shas.outputs.combined_remote_shas }}
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download remote commit shas
        id: check-shas
        run: |
          # Download remote shas
          postinstall_latest_sha=$(curl -s https://api.github.com/repos/eupnea-linux/postinstall-scripts/commits/main | jq -r '.sha')
          audio_latest_sha=$(curl -s https://api.github.com/repos/eupnea-linux/audio-scripts/commits/main | jq -r '.sha')
          
          # Check remote shas agains cached ones
          postinstall_match_results=$([[ "$(cat sha_cache.txt | head -1)" == "$postinstall_latest_sha" ]] && echo "true" || echo "false")
          audio_match_results=$([[ "$(cat sha_cache.txt | tail -1)" == "$audio_latest_sha" ]] && echo "true" || echo "false")
          
          # Compare results and determine if there was an update in any of the repos
          if [[ "$postinstall_match_results" == "true" && "$audio_match_results" == "true" ]]; then
            echo "match_results=true" >> $GITHUB_OUTPUT
          else
            echo "match_results=false" >> $GITHUB_OUTPUT
          fi
          
          # Combine remote shas into one string with a line break (for writing to a file in the next job)
          combined_remote_shas="$postinstall_latest_sha"$'\n'"$audio_latest_sha"
          # echo "combined_remote_shas=$combined_remote_shas" >> $GITHUB_OUTPUT
  

  deploy-repo:
    runs-on: ubuntu-22.04
    needs: check-sha # needs for the vars from the previous job
    # Only run script when remote sha has changed, aka the results DON'T match
    if: needs.check-shas.outputs.match_results == 'false'
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Update local commit sha file
        run: echo "${{ needs.check-shas.outputs.combined_remote_shas }}" > ./sha_cache.txt
      
      - name: Bump version in control file
        run: |
          CURRENT_VERSION=$(sed -n '2p' control | sed 's/.*://' | xargs) # get current version from control file
          NEXTVERSION=$(echo ${CURRENT_VERSION} | awk -F. -v OFS=. '{$NF += 1 ; print}') # bump version
          sed -i "2s/.*/Version: ${NEXTVERSION}/" control # update version in control file

      - name: Creating debian package
        run: bash pack-deb.sh

      - name: Updating files in main repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: Update files in main repo
          # Only include needed files
          file_pattern: 'control sha_cache.txt'

      - name: Deploying repo
        uses: smeinecke/apt-repo-action@v2.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo_supported_arch: amd64
          repo_supported_version: |
            kinetic
            jammy
            stable
          file: eupnea-utils*.deb
          file_target_version: kinetic
          public_key: ${{ secrets.PUBLIC }}
          private_key: ${{ secrets.PRIVATE }}
          key_passphrase: ""
          repo_folder: "debian_ubuntu"
